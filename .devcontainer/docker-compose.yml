version: '3'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        # [Choice] Python version: 3, 3.8, 3.7, 3.6
        VARIANT: 3
        # [Choice] Install Node.js
        INSTALL_NODE: "true"
        NODE_VERSION: "lts/*"
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    volumes:
      - ..:/workspace:cached
      - ../data:/data
    networks:
      - planka_planka-network
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    environment:
      - PLANKA_URL=http://planka:1337/
      - DATA_READER_USER=grafana_user
      - DATA_READER_PASSWORD=passwd
      - PROJECT_TO_READ=Important project
      - BOARD_TO_READ=Kanban
      - PYTHONPATH=/workspace
networks:
  planka_planka-network:
    #name: planka-default
    external: true
    #network_mode: service:planka
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    #network_mode: service:db

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  #db:
  #  image: postgres:latest
  #  restart: unless-stopped
  #  volumes:
  #    - postgres-data:/var/lib/postgresql/data
  #  environment:
  #    POSTGRES_USER: postgres
  #    POSTGRES_DB: postgres
  #    POSTGRES_PASSWORD: postgres

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

#volumes:
#  postgres-data:
